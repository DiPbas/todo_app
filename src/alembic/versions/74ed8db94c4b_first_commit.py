"""First commit

Revision ID: 74ed8db94c4b
Revises: 
Create Date: 2024-11-16 13:57:05.447172

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '74ed8db94c4b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('todo', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('todo', 'date',
               existing_type=sa.DATE(),
               nullable=True)
    op.drop_constraint('todo_user_id_fkey', 'todo', type_='foreignkey')
    op.create_foreign_key(None, 'todo', 'users', ['user_id'], ['id'])
    op.alter_column('users', 'password',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.Date(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_constraint('users_email_key', 'users', type_='unique')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint('users_email_key', 'users', ['email'])
    op.alter_column('users', 'created_at',
               existing_type=sa.Date(),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('users', 'password',
               existing_type=sa.VARCHAR(length=255),
               nullable=True)
    op.drop_constraint(None, 'todo', type_='foreignkey')
    op.create_foreign_key('todo_user_id_fkey', 'todo', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.alter_column('todo', 'date',
               existing_type=sa.DATE(),
               nullable=False)
    op.alter_column('todo', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    # ### end Alembic commands ###
